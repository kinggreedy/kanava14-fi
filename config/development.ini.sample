###
# app configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:blog_platform

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_celery

project.name = Kanava14.fi
userauthentication.secret = __secret__
sqlalchemy.url = postgresql://__username__:__password__@__host__:__port__/__table__
languagedetector.apikey = __languagedetectorapikey__

retry.attempts = 3

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
debugtoolbar.hosts = 127.0.0.1 ::1

[pshell]
setup = blog_platform.pshell.setup

###
# wsgi server configuration
###

[alembic]
# path to migration scripts
script_location = blog_platform/alembic
file_template = %%(year)d%%(month).2d%%(day).2d_%%(rev)s
# file_template = %%(rev)s_%%(slug)s

[server:main]
use = egg:waitress#main
listen = *:8080

###
# logging configuration
# https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, blog_platform, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_blog_platform]
level = DEBUG
handlers =
qualname = blog_platform

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s:%(lineno)s][%(threadName)s] %(message)s

[celery]
BROKER_URL = __redissetupstring__
CELERY_IMPORTS = blog_platform.tasks.blog_post_tasks

[celerybeat:task1]
task = blog_platform.tasks.blog_post_tasks.detect_language_task
type = crontab
schedule = {"minute": "*/10"}

[logger_celery]
level = INFO
handlers =
qualname = celery

[logger_celery_worker_job]
level = INFO
handlers =
qualname = celery.worker.job
propagate = 1
