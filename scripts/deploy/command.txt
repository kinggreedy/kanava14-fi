sudo act -P ubuntu-latest=nektos/act-environments-ubuntu:18.04 -j build
==


sudo apt-get update
sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade
sudo apt-get autoremove
sudo apt-get autoclean

# add to .screenrc
# termcapinfo xterm ti@:te@

sudo apt-get -y install python-pip
sudo apt-get -y install virtualenv
sudo apt-get -y install python3.7 python3-pip
virtualenv --version

wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
RELEASE=$(lsb_release -cs)
echo "deb http://apt.postgresql.org/pub/repos/apt/ ${RELEASE}"-pgdg main | sudo tee  /etc/apt/sources.list.d/pgdg.list
cat /etc/apt/sources.list.d/pgdg.list
sudo apt-get update
sudo apt-get -y install postgresql-11
sudo ss -tunelp | grep 5432


sudo mkdir -p /opt/python3test/blog-platform
sudo chown -R vagrant:vagrant /opt/python3test
ls -la /opt/python3test
cd /opt/python3test
virtualenv venv
virtualenv -p /usr/bin/python3.7 venv
source venv/bin/activate

pip install flake8
pip install pytest
pip install "pyramid==1.10.4"
pip install cookiecutter
cookiecutter gh:Pylons/pyramid-cookiecutter-starter --checkout 1.10-branch
cd blog_platform
pip install --upgrade pip setuptools
pip install -e .
alembic -c development.ini revision --autogenerate -m "init"
alembic -c development.ini upgrade head
initialize_blog_platform_db development.ini
pytest
# TODO: Edit development.ini port 30486 listen to * and debugtoolbar.hosts
pserve development.ini --reload


# SSH
sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sudo service ssh restart

curl -L -o unison-fsmonitor https://github.com/TentativeConvert/Syndicator/raw/master/unison-binaries/unison-fsmonitor
sudo mv unison-fsmonitor /usr/bin
sudo chmod +x /usr/bin/unison-fsmonitor

pip install -e ".[testing]"




pytest --cov -q
pytest
flake8
python setup.py sdist



CREATE USER vagrant WITH ENCRYPTED PASSWORD 'vagrant';
ALTER USER vagrant WITH SUPERUSER;

sudo apt-get -y install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) \
    stable"
sudo apt-get update
sudo apt-get -y install docker-ce docker-ce-cli containerd.io
curl https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash

db_password=$(< /dev/urandom tr -dc _A-Za-z0-9 | head -c${1:-15})
sudo -u postgres psql -c "CREATE DATABASE kanava14;"
sudo -u postgres psql -c "
    CREATE USER kanava14 WITH ENCRYPTED PASSWORD '$db_password';
    GRANT ALL PRIVILEGES ON DATABASE kanava14 TO kanava14;"
"

pip install -e .
alembic -c development.ini upgrade head
initialize_blog_platform_db development.ini
